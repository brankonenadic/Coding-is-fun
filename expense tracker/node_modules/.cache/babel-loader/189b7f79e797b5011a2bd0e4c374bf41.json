{"ast":null,"code":"import _toConsumableArray from\"C:/xampp/htdocs/brankonenadic/github/React-App/01-starting-setup/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React from'react';import'./Chart.css';import ChartBar from'./ChartBar';import{jsx as _jsx}from\"react/jsx-runtime\";var Chart=function Chart(props){var dataPointValue=props.dataPoints.map(function(dataPoint){return dataPoint.value;});var totalValue=Math.max.apply(Math,_toConsumableArray(dataPointValue));return/*#__PURE__*/_jsx(\"div\",{className:\"chart\",children:props.dataPoints.map(function(dataPoint){return/*#__PURE__*/_jsx(ChartBar,{value:dataPoint.value,maxValue:totalValue,label:dataPoint.label},dataPoint.label);})});};export default Chart;","map":{"version":3,"sources":["C:/xampp/htdocs/brankonenadic/github/React-App/01-starting-setup/src/components/Chart/Chart.js"],"names":["React","ChartBar","Chart","props","dataPointValue","dataPoints","map","dataPoint","value","totalValue","Math","max","label"],"mappings":"+LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,C,2CACA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CACrB,GAAMC,CAAAA,cAAc,CAAGD,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,SAAAC,SAAS,QAAIA,CAAAA,SAAS,CAACC,KAAd,EAA9B,CAAvB,CACA,GAAMC,CAAAA,UAAU,CAAGC,IAAI,CAACC,GAAL,OAAAD,IAAI,oBAAQN,cAAR,EAAvB,CACA,mBACI,YAAK,SAAS,CAAC,OAAf,UACID,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,SAAAC,SAAS,qBAAI,KAAC,QAAD,EAAgC,KAAK,CAAEA,SAAS,CAACC,KAAjD,CAAwD,QAAQ,CAAEC,UAAlE,CAA8E,KAAK,CAAEF,SAAS,CAACK,KAA/F,EAAeL,SAAS,CAACK,KAAzB,CAAJ,EAA9B,CADJ,EADJ,CAKH,CARD,CAUA,cAAeV,CAAAA,KAAf","sourcesContent":["import React from 'react'\r\nimport './Chart.css'\r\nimport ChartBar from './ChartBar'\r\nconst Chart = (props) => {\r\n    const dataPointValue = props.dataPoints.map(dataPoint => dataPoint.value);\r\n    const totalValue = Math.max(...dataPointValue);\r\n    return (\r\n        <div className=\"chart\">\r\n           {props.dataPoints.map(dataPoint => <ChartBar key={dataPoint.label} value={dataPoint.value} maxValue={totalValue} label={dataPoint.label} /> )} \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n"]},"metadata":{},"sourceType":"module"}